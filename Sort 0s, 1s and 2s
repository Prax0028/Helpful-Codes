#Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.
#Expected Time Complexity: O(N)
#Expected Auxiliary Space: O(1)

def sort012(self,arr,n):
    
        # Initialize pointers
        low = 0
        mid = 0
        high = n - 1
    
        # Traverse the array
        while mid <= high:
            if arr[mid] == 0:
                # Swap arr[mid] and arr[low], increment both pointers
                arr[mid], arr[low] = arr[low], arr[mid]
                low += 1
                mid += 1
            elif arr[mid] == 1:
                # Just move mid pointer forward
                mid += 1
            else:  # arr[mid] == 2
                # Swap arr[mid] and arr[high], decrement high pointer
                arr[mid], arr[high] = arr[high], arr[mid]
                high -= 1
    
        # No need to return anything as array is sorted in place
